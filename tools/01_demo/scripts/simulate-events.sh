#!/bin/bash
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT MODIFY BELOW
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#------------------------------------------------------------------------------------------------------------------------------------
#  Launch Injection
#------------------------------------------------------------------------------------------------------------------------------------
echo "   "
echo "   "
echo "   "
echo "   "
echo "   ----------------------------------------------------------------------------------------------------------------------------------------"
echo "    üöÄ  Launching Event Injection" 
echo "   ----------------------------------------------------------------------------------------------------------------------------------------"

for actFile in $(ls -1 $WORKING_DIR_EVENTS | grep "json"); 
do 

#------------------------------------------------------------------------------------------------------------------------------------
#  Prepare the Data
#------------------------------------------------------------------------------------------------------------------------------------

      echo "      ------------------------------------------------------------------------------------------------------------------------------------"
      echo "        üõ†Ô∏è  Preparing Data for file $actFile"
      echo "      ------------------------------------------------------------------------------------------------------------------------------------"


      #------------------------------------------------------------------------------------------------------------------------------------
      #  Create file and structure in /tmp
      #------------------------------------------------------------------------------------------------------------------------------------
      mkdir /tmp/training-files-events/   >/tmp/demo.log 2>&1  || true
      rm /tmp/training-files-events/x*  >/tmp/demo.log 2>&1  || true
      cp $WORKING_DIR_EVENTS/$actFile /tmp/training-files-events/
      cd /tmp/training-files-events/


      #------------------------------------------------------------------------------------------------------------------------------------
      #  Update Timestamps
      #------------------------------------------------------------------------------------------------------------------------------------
      echo "          üî® Updating Timestamps (this can take a minute)"
      echo "   " > /tmp/timestampedErrorFiles-events.json

      EVENTS_SECONDS=10

      while IFS= read -r line
      do
            ((EVENTS_SECONDS++))
            ((EVENTS_SECONDS++))

            # Get timestamp in ELK format
            export my_timestamp=$(date $DATE_FORMAT_EVENTS)":$EVENTS_SECONDS"
            #echo $my_timestamp
            # Replace in line
            line=${line//MY_TIMESTAMP/$my_timestamp}
            # Write line to temp file
            echo $line >> /tmp/timestampedErrorFiles-events.json
            #sleep 2
            #echo "         ." #$my_timestamp"
      done < "$actFile"
      echo "          ‚úÖ OK"
      echo " "


      #------------------------------------------------------------------------------------------------------------------------------------
      #  Split the files in 1500 line chunks for kafkacat
      #------------------------------------------------------------------------------------------------------------------------------------
      echo "          üî® Splitting"
      split -l 1500 /tmp/timestampedErrorFiles-events.json >/tmp/demo.log 2>&1  || true
      export NUM_FILES=$(ls | wc -l)
      rm $actFile >/tmp/demo.log 2>&1  || true
      rm /tmp/timestampedErrorFiles-events.json >/tmp/demo.log 2>&1  || true
      cd -  >/tmp/demo.log 2>&1  || true
      echo "          ‚úÖ OK"
      echo " "

      #------------------------------------------------------------------------------------------------------------------------------------
      #  Inject the Data
      #------------------------------------------------------------------------------------------------------------------------------------
      echo "      ------------------------------------------------------------------------------------------------------------------------------------"
      echo "       üåè  Injecting Event Data from File: ${actFile}" 
      echo "           Quit with Ctrl-Z"
      echo "      ------------------------------------------------------------------------------------------------------------------------------------"
      ACT_COUNT=0
      for FILE in /tmp/training-files-events/*; do 
          if [[ $FILE =~ "x"  ]]; then
            ACT_COUNT=`expr $ACT_COUNT + 1`
            echo "          Injecting file ($ACT_COUNT/$(($NUM_FILES-1))) - $FILE"
            #echo "                 ${KAFKACAT_EXE} -v -X security.protocol=SASL_SSL -X ssl.ca.location=./ca.crt -X sasl.mechanisms=SCRAM-SHA-512  -X sasl.username=token -X sasl.password=$KAFKA_PASSWORD -b $KAFKA_BROKER -P -t $KAFKA_TOPIC_EVENTS -l $FILE   "
            ${KAFKACAT_EXE} -v -X security.protocol=SASL_SSL -X ssl.ca.location=./ca.crt -X sasl.mechanisms=SCRAM-SHA-512  -X sasl.username=$SASL_USER -X sasl.password=$SASL_PASSWORD -b $KAFKA_BROKER -P -t $KAFKA_TOPIC_EVENTS -l $FILE || true
            echo " "
            echo "          ‚úÖ OK"
            echo " "
          fi
      done
done


